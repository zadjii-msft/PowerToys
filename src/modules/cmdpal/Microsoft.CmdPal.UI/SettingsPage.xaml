<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="Microsoft.CmdPal.UI.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:cpcontrols="using:Microsoft.CmdPal.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:help="using:Microsoft.CmdPal.UI.Helpers"
    xmlns:local="using:Microsoft.CmdPal.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ptControls="using:Microsoft.CmdPal.UI.Controls"
    xmlns:ui="using:CommunityToolkit.WinUI"
    xmlns:viewmodels="using:Microsoft.CmdPal.UI.ViewModels"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    Background="Transparent"
    mc:Ignorable="d">

    <Page.Resources>
        <!--  These styles can be referenced to create a consistent SettingsPage layout  -->

        <!--  Spacing between cards  -->
        <x:Double x:Key="SettingsCardSpacing">4</x:Double>

        <!--  Style (inc. the correct spacing) of a section header  -->
        <Style
            x:Key="SettingsSectionHeaderTextBlockStyle"
            BasedOn="{StaticResource BodyStrongTextBlockStyle}"
            TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Margin" Value="1,30,0,6" />
            </Style.Setters>
        </Style>

        <StackLayout
            x:Name="VerticalStackLayout"
            Orientation="Vertical"
            Spacing="{StaticResource SettingsCardSpacing}" />

    </Page.Resources>
    <ScrollViewer Padding="8,0,8,0">
        <Grid Padding="8,-22,8,8">
            <StackPanel
                MaxWidth="1000"
                HorizontalAlignment="Stretch"
                Spacing="{StaticResource SettingsCardSpacing}">

                <!--
                    I got these from the samples, but they break XAML hot-reloading,
                    so I commented them out.
                -->

                <!--<win:StackPanel.ChildrenTransitions>
                    <win:EntranceThemeTransition FromVerticalOffset="50" />
                    <win:RepositionThemeTransition IsStaggeringEnabled="False" />
                </win:StackPanel.ChildrenTransitions>-->

                <TextBlock x:Uid="CmdPalSettingsHeader" Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" />

                <controls:SettingsExpander
                    Description="This key will open the Command Palette"
                    Header="Activation key"
                    HeaderIcon="{ui:FontIcon Glyph=&#xEDA7;}"
                    IsExpanded="True">
                    <ptControls:ShortcutControl HotkeySettings="{x:Bind ViewModel.Hotkey, Mode=TwoWay}" />

                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard
                            Description="If enabled, the Command Palette will return to the home page when activated"
                            Header="Go home when activated"
                            HeaderIcon="{ui:FontIcon Glyph=&#xE80F;}">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.HotkeyGoesHome, Mode=TwoWay}" />
                        </controls:SettingsCard>
                        <controls:SettingsCard Description="When enabled, the previous search text will be selected when the app is opened" Header="Highlight search on activate">
                            <ToggleSwitch IsOn="{x:Bind ViewModel.HighlightSearchOnActivate, Mode=TwoWay}" />
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>

                <controls:SettingsCard
                    Description="Controls if app details are automatically expanded or not"
                    Header="Show app details"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE8A0;}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.ShowAppDetails, Mode=TwoWay}" />
                </controls:SettingsCard>

                <controls:SettingsCard
                    Description="When enabled, pressing backspace when the search text is empty will take you back"
                    Header="Backspace goes back"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE750;}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.BackspaceGoesBack, Mode=TwoWay}" />
                </controls:SettingsCard>

                <controls:SettingsCard
                    Description="When enabled, single click activates list items. When disabled, single click selects and double click activates."
                    Header="Single-click activates"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE962;}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.SingleClickActivates, Mode=TwoWay}" />
                </controls:SettingsCard>


                <TextBlock x:Uid="ExtensionSettingsHeader" Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" />

                <ItemsRepeater ItemsSource="{x:Bind ViewModel.CommandProviders, Mode=OneWay}" Layout="{StaticResource VerticalStackLayout}">
                    <ItemsRepeater.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:ProviderSettingsViewModel">
                            <controls:SettingsCard ContentAlignment="Left" IsClickEnabled="True">
                                <!--
                                    What we're doing here is 90% stupid.
                                    
                                    The SettingsCard APIs only explicitly allow an
                                    Icon as the content for the HeaderIcon property.
                                    We of course, have to do the goofy async IconBox thing.
                                    
                                    To manage this, we have to basically re-create
                                    the layout of the SettingsCard HeaderIcon,
                                    Header & Description, all within the Content.
                                    
                                    Most of what follows is lifted directly from
                                    https://github.com/CommunityToolkit/Windows/blob/main/components/SettingsControls/src/SettingsCard/SettingsCard.xaml
                                -->
                                <Grid Margin="0,-12,0,0" HorizontalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="0" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox
                                        Grid.RowSpan="1"
                                        MaxWidth="20"
                                        MaxHeight="20"
                                        Margin="2,0,20,0">
                                        <cpcontrols:IconBox
                                            Width="20"
                                            Height="20"
                                            Margin="0,0,0,0"
                                            win:AutomationProperties.AccessibilityView="Raw"
                                            SourceKey="{x:Bind Icon, Mode=OneWay}"
                                            SourceRequested="{x:Bind help:IconCacheProvider.SourceRequested}" />
                                    </Viewbox>

                                    <StackPanel
                                        Grid.Column="1"
                                        Margin="0,0,24,0"
                                        VerticalAlignment="Center"
                                        Orientation="Vertical">
                                        <ContentPresenter
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            win:HighContrastAdjustment="None"
                                            Content="{x:Bind DisplayName, Mode=OneWay}"
                                            TextWrapping="Wrap" />

                                        <ContentPresenter
                                            Content="{x:Bind ExtensionName, Mode=OneWay}"
                                            FontSize="12"
                                            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                            TextWrapping="Wrap" />
                                    </StackPanel>

                                    <!--
                                        Because of this insane XAML thing we're
                                        doing, we can't effectively put content
                                        here on the right. Sad.
                                    -->

                                    <!--<ContentPresenter
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        HorizontalContentAlignment="Right">
                                        <ToggleSwitch IsOn="{x:Bind IsEnabled, Mode=TwoWay}"/>
                                    </ContentPresenter>-->
                                </Grid>

                            </controls:SettingsCard>

                        </DataTemplate>
                    </ItemsRepeater.ItemTemplate>
                </ItemsRepeater>

                <!--  Example 'About' section  -->
                <TextBlock x:Uid="AboutSettingsHeader" Style="{StaticResource SettingsSectionHeaderTextBlockStyle}" />

                <controls:SettingsExpander
                    Description="© 2025. All rights reserved."
                    Header="Windows Command Palette"
                    HeaderIcon="{ui:BitmapIcon Source=ms-appx:///Assets/StoreLogo.png}">
                    <TextBlock
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        IsTextSelectionEnabled="True"
                        Text="Version 0.0.1" />
                    <controls:SettingsExpander.Items>
                        <controls:SettingsCard HorizontalContentAlignment="Left" ContentAlignment="Left">
                            <StackPanel Margin="-12,0,0,0" Orientation="Vertical">
                                <HyperlinkButton Content="Link 1" />
                                <HyperlinkButton Content="Link 2" />
                                <HyperlinkButton Content="Link 3" />
                            </StackPanel>
                        </controls:SettingsCard>
                    </controls:SettingsExpander.Items>
                </controls:SettingsExpander>
                <HyperlinkButton Margin="0,8,0,0" Content="Send feedback" />
            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>