<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\Common.Dotnet.CsWinRT.props" />
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <RootNamespace>Microsoft.CmdPal.UI</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <OutputPath Condition="'$(CommandPaletteBranding)'=='' or '$(CommandPaletteBranding)'=='Dev'">$(SolutionDir)$(Platform)\$(Configuration)\WinUI3Apps\CmdPalDev</OutputPath>
    <OutputPath Condition="'$(CommandPaletteBranding)'!='' and '$(CommandPaletteBranding)'!='Dev'">$(SolutionDir)$(Platform)\$(Configuration)\WinUI3Apps\CmdPal</OutputPath>

    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <GenerateAppxPackageOnBuild>true</GenerateAppxPackageOnBuild>
  </PropertyGroup>

  <PropertyGroup>
    <!-- This lets us actually reference types from Microsoft.Terminal.UI -->
    <CsWinRTIncludes>Microsoft.Terminal.UI</CsWinRTIncludes>
    <CsWinRTGeneratedFilesDir>$(OutDir)</CsWinRTGeneratedFilesDir>
  </PropertyGroup>

  <PropertyGroup>
    <!-- This disables the auto-generated main, so we can be single-instanced -->
    <DefineConstants>DISABLE_XAML_GENERATED_MAIN</DefineConstants>
  </PropertyGroup>


  <ItemGroup>
    <None Remove="Controls\ActionBar.xaml" />
    <None Remove="Controls\SearchBar.xaml" />
    <None Remove="ListDetailPage.xaml" />
    <None Remove="LoadingPage.xaml" />
    <None Remove="MainPage.xaml" />
    <None Remove="ShellPage.xaml" />
    <None Remove="Styles\Button.xaml" />
    <None Remove="Styles\TextBox.xaml" />
  </ItemGroup>

  <!-- <PropertyGroup>
    <AssetsDir Condition="'$(CommandPaletteBranding)'=='Release'">Assets</AssetsDir>
    <AssetsDir Condition="'$(CommandPaletteBranding)'=='Preview'">Assets</AssetsDir>
    <AssetsDir Condition="'$(CommandPaletteBranding)'=='Canary'">Assets</AssetsDir>
    <AssetsDir Condition="'$(CommandPaletteBranding)'=='' or '$(CommandPaletteBranding)'=='Dev'">Assets-Dev</AssetsDir>
  </PropertyGroup> -->
  
  <ItemGroup>
    <Content Include="Assets\SplashScreen.scale-200.png" />
    <Content Include="Assets\LockScreenLogo.scale-200.png" />
    <Content Include="Assets\Square150x150Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.scale-200.png" />
    <Content Include="Assets\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets\StoreLogo.png" />
    <Content Include="Assets\Wide310x150Logo.scale-200.png" />
  </ItemGroup>
  <ItemGroup Condition="'$(CommandPaletteBranding)'=='' or '$(CommandPaletteBranding)'=='Dev'">
    <Content Include="Assets-Dev\SplashScreen.scale-200.png" />
    <Content Include="Assets-Dev\LockScreenLogo.scale-200.png" />
    <Content Include="Assets-Dev\Square150x150Logo.scale-200.png" />
    <Content Include="Assets-Dev\Square44x44Logo.scale-200.png" />
    <Content Include="Assets-Dev\Square44x44Logo.targetsize-24_altform-unplated.png" />
    <Content Include="Assets-Dev\StoreLogo.png" />
    <Content Include="Assets-Dev\Wide310x150Logo.scale-200.png" />
  </ItemGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />

    <AppxManifest Include="Package.appxmanifest" 
                  Condition="'$(CommandPaletteBranding)'=='Release'" />
    <AppxManifest Include="Package-Pre.appxmanifest" 
                  Condition="'$(CommandPaletteBranding)'=='Preview'" />
    <AppxManifest Include="Package-Can.appxmanifest" 
                  Condition="'$(CommandPaletteBranding)'=='Canary'" />
    <AppxManifest Include="Package-Dev.appxmanifest" 
                  Condition="'$(CommandPaletteBranding)'=='' or '$(CommandPaletteBranding)'=='Dev'" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" />
    <PackageReference Include="CommunityToolkit.WinUI.Converters" />
    <PackageReference Include="CommunityToolkit.WinUI.Animations" />
    <PackageReference Include="CommunityToolkit.WinUI.Extensions" />
    <PackageReference Include="CommunityToolkit.WinUI.UI.Controls.Markdown" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" />

    <PackageReference Include="Microsoft.Windows.CsWin32">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- The following hardcoded package versions are to work around security vulnerabilities in 4.3.0 -->
    <PackageReference Include="System.Net.Http" />
    <PackageReference Include="System.Private.Uri" />
    <PackageReference Include="System.Text.RegularExpressions" />
    <PackageReference Include="System.IO.Abstractions" />

    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="System.Text.Json" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.CmdPal.Common\Microsoft.CmdPal.Common.csproj" />
    <ProjectReference Include="..\Microsoft.CmdPal.UI.ViewModels\Microsoft.CmdPal.UI.ViewModels.csproj" />

    <ProjectReference Include="..\extensionsdk\Microsoft.CmdPal.Extensions.Helpers\Microsoft.CmdPal.Extensions.Helpers.csproj" />

    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.Apps\Microsoft.CmdPal.Ext.Apps.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.Bookmark\Microsoft.CmdPal.Ext.Bookmarks.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.Calc\Microsoft.CmdPal.Ext.Calc.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.CmdPalSettings\Microsoft.CmdPal.Ext.Settings.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.Registry\Microsoft.CmdPal.Ext.Registry.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.Shell\Microsoft.CmdPal.Ext.Shell.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.WindowsServices\Microsoft.CmdPal.Ext.WindowsServices.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.WindowsSettings\Microsoft.CmdPal.Ext.WindowsSettings.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.WindowsTerminal\Microsoft.CmdPal.Ext.WindowsTerminal.csproj" />
    <ProjectReference Include="..\Exts\Microsoft.CmdPal.Ext.WindowWalker\Microsoft.CmdPal.Ext.WindowWalker.csproj" />

    <ProjectReference Include="..\Microsoft.Terminal.UI\Microsoft.Terminal.UI.vcxproj">
      <ReferenceOutputAssembly>True</ReferenceOutputAssembly>
      <Private>True</Private>
      <CopyLocalSatelliteAssemblies>True</CopyLocalSatelliteAssemblies>
    </ProjectReference>
    <ProjectReference Include="..\..\..\common\Common.UI\Common.UI.csproj" />

    <!-- LOAD BEARING: GeneratePathProperty=true on BOTH the AC dependencies. Don't forget the AdaptiveCardsWorkaround below -->
    <PackageReference Include="AdaptiveCards.ObjectModel.WinUI3" GeneratePathProperty="true" />
    <PackageReference Include="AdaptiveCards.Rendering.WinUI3" GeneratePathProperty="True" />
    <PackageReference Include="AdaptiveCards.Templating" />

    <PackageReference Include="HtmlAgilityPack" />
  </ItemGroup>

  <ItemGroup>
    <Page Update="LoadingPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="ShellPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="ListDetailPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="MainPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Controls\SearchBar.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Styles\Button.xaml">
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </Page>
    <Page Update="Styles\TextBox.xaml">
      <XamlRuntime>$(DefaultXamlRuntime)</XamlRuntime>
    </Page>
  </ItemGroup>

  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>


  <!-- <AdaptiveCardsWorkaround> -->
  <!-- Workaround for Adaptive Cards not supporting correct RIDs when using .NET 8 -->
  <PropertyGroup>
    <AdaptiveCardsNative>runtimes\win10-$(Platform)\native</AdaptiveCardsNative>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="$(PkgAdaptiveCards_ObjectModel_WinUI3)\$(AdaptiveCardsNative)\AdaptiveCards.ObjectModel.WinUI3.dll" Link="AdaptiveCards.ObjectModel.WinUI3.dll" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="$(PkgAdaptiveCards_Rendering_WinUI3)\$(AdaptiveCardsNative)\AdaptiveCards.Rendering.WinUI3.dll" Link="AdaptiveCards.Rendering.WinUI3.dll" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <!-- </AdaptiveCardsWorkaround> -->

</Project>